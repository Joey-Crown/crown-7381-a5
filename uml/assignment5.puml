@startuml
'https://plantuml.com/sequence-diagram

class InventoryTracker {
    start()
    main()
}

class SceneManager {
    scenes: Map<String, Scene>

    load()
    getScene(String): Scene
}

class MainWindowController {
    items : ItemModel

    + MainWindowController(ItemModel, SceneManager,
                           EditItemWindowController)

    addItemButtonClicked(EventHandler)
    editItemButtonClicked(EventHandler)
    removeItemButtonClicked(EventHandler)

    addItem(String, String, BigDecimal)
    editItem()

    saveInventoryAsCSV(filename: String)
    saveInventoryAsHTML(filename: String)
    saveInventoryAsJSON(filename: String)
}

class EditItemWindowController {
}

class AddItemWindowController {
}

class RemoveItemWindowController {
}

class SearchItemWindowController {
}

class ItemModel {
    - ObservableList<Item>
}

class Item {
    - name: SimpleStringProperty
    - serialNumber: SimpleStringProperty
    - value: SimpleDoubleProperty

    + getName()
    + setName()
    + nameProperty()
    + getSerialNumber()
    + setSerialNumber()
    + serialNumberProperty()
    + getValue()
    + setValue()
    + valueProperty()

    + verifySerialNumberFormat(String): boolean
}

class FileManager {
    saveAsCSV(filename: String), data: String)
    saveAsJSON(filename: String), data: String)
    saveAsHTML(filename: String), data: String)
}


openjfx.org.Application <|-- InventoryTracker
InventoryTracker -- SceneManager
SceneManager --- MainWindowController
SceneManager --- AddItemWindowController
SceneManager --- EditItemWindowController
SceneManager --- RemoveItemWindowController
SceneManager --- SearchItemWindowController
MainWindowController o-- FileManager
MainWindowController o-- ItemModel
AddItemWindowController o-- ItemModel
EditItemWindowController o-- ItemModel
RemoveItemWindowController o-- ItemModel
SearchItemWindowController o-- ItemModel
MainWindowController o- EditItemWindowController
ItemModel *-- Item


@enduml